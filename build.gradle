plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
    id 'me.tagavari.nmsremap' version '1.0.0'
}

group = 'mc.ajneb97'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        url "https://repo.codemc.io/repository/maven-public/"
    }
    mavenLocal()
}

dependencies {
    compileOnly "org.spigotmc:spigot:1.20.2-R0.1-SNAPSHOT:remapped-mojang"
    compileOnly 'me.clip:placeholderapi:2.11.2'
    compileOnly 'me.filoghost.holographicdisplays:holographicdisplays-api:3.0.0'
}
def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion.set(JavaLanguageVersion.of(targetJavaVersion))
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    setArchiveBaseName("MineChess")
}

tasks {
    remap {
        version("1.20.2-R0.1-SNAPSHOT")
        inputFile.set(new File(buildDir, "/libs/TheDeQTesting-1.20.2-R0.1-SNAPSHOT-all.jar"));
        archiveClassifier.set("remapped")
        archiveName.set("TheDeQTesting-remapped.jar")
        outputFile.set(new File(buildDir, "/libs/TheDeQTesting-remapped.jar"))
    }
}